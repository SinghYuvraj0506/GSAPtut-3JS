/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 pc.gltf --transform
Author: SINNIK (https://sketchfab.com/sinnik)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/gaming-pc-with-curved-monitor-ad00f460c13743a8bd1f91c230c7142c
Title: Gaming PC with Curved Monitor
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/pc-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_2.geometry} material={materials.LLIM_Table_Glass} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_3.geometry} material={materials.LLIM_Table_Wood_1} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_5.geometry} material={materials.MonitorPlastic} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_7.geometry} material={materials.buttons} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_8.geometry} material={materials.casing} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_10.geometry} material={materials.insides_gamingPC} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_12.geometry} material={materials.sensors} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_14.geometry} material={materials.wheel} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_15.geometry} material={materials.casing_Gaming_Keyboard} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_17.geometry} material={materials.casing_gamingPC} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_21.geometry} material={materials.plastic_gamingPC} rotation={[-Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/pc-transformed.glb')
